"""
Django settings for annonymous project.

Generated by 'django-admin startproject' using Django 3.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['0.0.0.0', '127.0.0.1', '172.20.10.3', 'localhost']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'user',
    'board',
    'storages',
    'channels',
    'django_extensions',
    'corsheaders',
]

# CORS 설정
CORS_ALLOW_ALL_ORIGINS = True  # 개발 환경에서 모든 도메인 허용
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOWED_ORIGINS = [
    "http://localhost:8080",  # 필요한 도메인 추가
    "http://127.0.0.1:8080",
    "http://172.20.10.3:8080",
]

# WebSocket 관련 허용 설정
CORS_ORIGIN_ALLOW_ALL = True

# 커스텀 user를 사용하기 때문에 AUTH_USER_MODEL 선언
# user 앱에 User라는 클래스 사용
AUTH_USER_MODEL = 'user.User'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]

ROOT_URLCONF = 'ewhagreencup.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / 'templates',
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ewhagreencup.wsgi.application'
ASGI_APPLICATION = 'ewhagreencup.asgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    # 'default': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': BASE_DIR / 'db.sqlite3',
    # }
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'ewhagreencup',
        'USER': 'postgres',
        'PASSWORD': '0724',
        'HOST': 'localhost',
        'PORT': '5433'
    }
}

CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [('127.0.0.1', 6379)],  # Redis 서버 설정
        },
    },
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'  # 배포 시 정적 파일이 모이는 폴더

STATICFILES_DIRS = [
    BASE_DIR / 'static',
]

DEFAULT_FILE_STORAGE="storages.backends.s3boto3.S3Boto3Storage"

import json

env_json = 'env.json'
with open(env_json) as f: 
    env_json = json.loads(f.read())
    
AWS_ACCESS_KEY_ID=env_json['AWS_ACCESS_KEY_ID']
AWS_SECRET_ACCESS_KEY = env_json['AWS_SECRET_ACCESS_KEY']
AWS_STORAGE_BUCKET_NAME='yeonjuannonymous'

S3_ROOT_URL = env_json['S3_ROOT_URL']
SECRET_KEY = env_json['SECRET_KEY']

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# HTTPS 설정
SECURE_SSL_REDIRECT = True  # HTTPS로 강제 리다이렉트 (배포 환경에서 활성화)
SECURE_HSTS_SECONDS = 31536000  # HTTPS Strict Transport Security 활성화 (1년)
SECURE_HSTS_INCLUDE_SUBDOMAINS = True  # 서브도메인에도 HSTS 적용
SECURE_HSTS_PRELOAD = True  # 브라우저에 HTTPS Preload 요청
SECURE_CONTENT_TYPE_NOSNIFF = True  # MIME 타입 강제

# 개발 환경에서는 False로 설정 가능
SECURE_SSL_REDIRECT = False  # HTTPS 비활성화 (개발 환경)

SECURE_CROSS_ORIGIN_OPENER_POLICY = None